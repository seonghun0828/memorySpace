{"ast":null,"code":"var _jsxFileName = \"/Users/hoon/Documents/memory_space/src/home/header/Search.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, createContext, useEffect } from 'react';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst showOrHide = menu => {\n  const checking = () => menu.current.classList.toggle('show');\n\n  return checking;\n};\n\nconst clickHandler = event => {\n  const editMenu = document.querySelector('.edit-menu');\n  if (!editMenu) return; // 이미 어느 img가 클릭 되어 edit menu가 보이는 상태면 함수 종료\n\n  if (!editMenu.classList.contains('invisible')) return;\n  event.target.parentNode.appendChild(editMenu);\n  event.target.classList.toggle('clicked-img');\n  editMenu.classList.toggle('invisible');\n  const contentsDiv = event.target.parentNode.parentNode.parentNode;\n  contentsDiv.clicked_id = event.target.id;\n}; // const saveMemo = () => {\n//   const book_data = JSON.parse(localStorage.getItem('book'));\n//   const movie_data = JSON.parse(localStorage.getItem('movie'));\n//   const targetImg = document.querySelector('.clicked-img');\n//   const contents = document.querySelector('.contents-div');\n//   const memoSpace = document.querySelector('.memo-space').children[0];\n//   if (!targetImg || !contents) return;\n//   if (contents.children[0].classList.contains('book-div')) {\n//     const index = Object.keys(book_data).find(\n//       (key) => book_data[key].id === parseInt(targetImg.id)\n//     );\n//     console.log(memoSpace.value);\n//     book_data[index].memo = memoSpace.value;\n//     bookList = book_data;\n//     saveImg('book', bookList);\n//   } else {\n//     const index = Object.keys(movie_data).find(\n//       (key) => movie_data[key].id === parseInt(targetImg.id)\n//     );\n//     movie_data[index].memo = memoSpace.value;\n//     movieList = movie_data;\n//     saveImg('movie', movieList);\n//   }\n// };\n\n\nconst addMovie = (img_url, movieList) => {\n  let id_num;\n  if (movieList.length === 0) id_num = 0;else id_num = movieList[movieList.length - 1].id + 1;\n  const contents = document.querySelector('.contents-div');\n  if (!contents) return;\n  const movieDiv = contents.children[0];\n  const newDiv = document.createElement('div');\n  const newImg = document.createElement('img');\n  newDiv.appendChild(newImg);\n  newDiv.classList.add('img-div');\n  newImg.id = id_num;\n  newImg.src = img_url;\n  newImg.classList.add('movie-img');\n  newImg.addEventListener('click', clickHandler);\n  const obj = {\n    id: id_num,\n    data: img_url,\n    memo: ''\n  };\n  movieList.push(obj);\n  saveImg('movie', movieList);\n  movieDiv.appendChild(newDiv);\n};\n\nconst addBook = (img_url, bookList, img_memo) => {\n  let id_num;\n  if (bookList.length === 0) id_num = 0;else id_num = bookList[bookList.length - 1].id + 1;\n  const contents = document.querySelector('.contents-div');\n  if (!contents) return;\n  const bookDiv = contents.children[0];\n  const newDiv = document.createElement('div');\n  const newImg = document.createElement('img');\n  newDiv.appendChild(newImg);\n  newDiv.classList.add('img-div');\n  newImg.id = id_num;\n  newImg.src = img_url;\n  newImg.classList.add('book-img');\n  newImg.addEventListener('click', clickHandler);\n  if (typeof img_memo === 'undefined') img_memo = '';\n  const obj = {\n    id: id_num,\n    data: img_url,\n    memo: img_memo\n  };\n  bookList.push(obj);\n  saveImg('book', bookList);\n  bookDiv.appendChild(newDiv);\n};\n\nconst saveImg = (arg, list) => {\n  const category = arg === 'book' ? 'book' : 'movie';\n  localStorage.setItem(category, JSON.stringify(list));\n}; // const loadImg = () => {\n//   const contents = document.querySelector('.contents-div');\n//   if (!contents) return;\n//   const content = contents.children[0]; // book-div or movie-div\n//   let newId = 0;\n//   if (content.classList.contains('book-div')) {\n//     const book_data = JSON.parse(localStorage.getItem('book'));\n//     let newBookList = [];\n//     if (book_data !== null) {\n//       book_data.forEach((a) => {\n//         addBook(a.data, a.memo, newBookList, newId);\n//       });\n//     }\n//   }\n//   if (content.classList.contains('movie-div')) {\n//     const movie_data = JSON.parse(localStorage.getItem('movie'));\n//     let newMovieList = [];\n//     if (movie_data !== null) {\n//       movie_data.forEach((a) => {\n//         addMovie(a.data, a.memo, newMovieList, newId);\n//       });\n//     }\n//   }\n//   console.log('newlist: ', newBookList); // 왜 빈 리스트가 아니냐?\n//   console.log('newlist: ', newMovieList); // 왜 빈 리스트가 아니냐?\n// if (!memoBtn) return;\n// memoBtn.addEventListener('click', openMemo);\n// deleteBtn.addEventListener('click', deleteImg);\n// };\n\n\nwindow.onclick = event => {\n  const searchBtn = document.querySelector('.search-icon');\n  const dropDown = document.querySelector('.dropDown-menu');\n  const targetImg = document.querySelector('.clicked-img');\n  const editMenu = document.querySelector('.edit-menu');\n  if (!searchBtn && !dropDown) return;\n  if (event.target !== searchBtn) dropDown.classList.remove('show');\n  if (!editMenu) return;\n  const editMenuArr = [editMenu, editMenu.children[0], editMenu.children[1]];\n  const isClickEditMenu = editMenuArr.some(ele => ele === event.target);\n  if (!targetImg || isClickEditMenu) return; // target이 editMenu일 때는 함수 종료\n\n  if (event.target !== targetImg) {\n    editMenu.classList.add('invisible');\n    targetImg.classList.remove('clicked-img');\n  }\n};\n\nconst useBrowser = () => {\n  _s();\n\n  const element = useRef();\n\n  const clickbrowser = () => element.current.click();\n\n  const readFile = () => {\n    const contents = document.querySelector('.contents-div');\n    if (!contents) return;\n    const content = contents.children[0]; // book-div or movie-div\n\n    const file = element.current.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/') && file !== null) window.alert('이미지 파일만 선택해주십시오.');else {\n      const reader = new FileReader();\n\n      reader.onload = function () {\n        if (content.classList.contains('book-div')) {\n          let bookList = JSON.parse(localStorage.getItem('book'));\n          if (!bookList) bookList = [];\n          addBook(reader.result, bookList, '');\n        }\n\n        if (content.classList.contains('movie-div')) {\n          let movieList = JSON.parse(localStorage.getItem('movie'));\n          if (!movieList) movieList = [];\n          addMovie(reader.result, movieList, '');\n        }\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  useEffect(() => {\n    const {\n      current\n    } = element;\n    current.addEventListener('change', readFile);\n    return () => current.removeEventListener('change', readFile);\n  }, []);\n  return {\n    element,\n    clickbrowser\n  };\n};\n\n_s(useBrowser, \"SpBhasJPVJrZGxeF9Xbi1q4ov4I=\");\n\nconst loadFunction = {\n  // loadImg,\n  // saveMemo,\n  clickHandler,\n  addBook,\n  addMovie\n};\nexport const LoadFunctionContext = /*#__PURE__*/createContext(loadFunction);\n\nconst Search = () => {\n  _s2();\n\n  const {\n    element,\n    clickbrowser\n  } = useBrowser();\n  const dropDown_menu = useRef();\n  const checking = showOrHide(dropDown_menu);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropDown\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-browser\",\n      ref: element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-icon search-icon\",\n      onClick: checking,\n      children: \"\\uD83D\\uDD0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropDown-menu\",\n      ref: dropDown_menu,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDown-book\",\n        children: \"\\uCC45 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDown-movie\",\n        children: \"\\uC601\\uD654 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDown-browser\",\n        onClick: clickbrowser,\n        children: \"\\uB0B4 \\uCEF4\\uD4E8\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Search, \"HETiRmA35ejZL35evloY/ls/4EU=\", false, function () {\n  return [useBrowser];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/hoon/Documents/memory_space/src/home/header/Search.js"],"names":["React","useRef","createContext","useEffect","showOrHide","menu","checking","current","classList","toggle","clickHandler","event","editMenu","document","querySelector","contains","target","parentNode","appendChild","contentsDiv","clicked_id","id","addMovie","img_url","movieList","id_num","length","contents","movieDiv","children","newDiv","createElement","newImg","add","src","addEventListener","obj","data","memo","push","saveImg","addBook","bookList","img_memo","bookDiv","arg","list","category","localStorage","setItem","JSON","stringify","window","onclick","searchBtn","dropDown","targetImg","remove","editMenuArr","isClickEditMenu","some","ele","useBrowser","element","clickbrowser","click","readFile","content","file","files","type","startsWith","alert","reader","FileReader","onload","parse","getItem","result","readAsDataURL","removeEventListener","loadFunction","LoadFunctionContext","Search","dropDown_menu"],"mappings":"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","sourcesContent":["import React, { useRef, createContext, useEffect } from 'react';\nimport './Search.css';\n\nconst showOrHide = (menu) => {\n  const checking = () => menu.current.classList.toggle('show');\n  return checking;\n};\n\nconst clickHandler = (event) => {\n  const editMenu = document.querySelector('.edit-menu');\n  if (!editMenu) return;\n  // 이미 어느 img가 클릭 되어 edit menu가 보이는 상태면 함수 종료\n  if (!editMenu.classList.contains('invisible')) return;\n  event.target.parentNode.appendChild(editMenu);\n  event.target.classList.toggle('clicked-img');\n  editMenu.classList.toggle('invisible');\n  const contentsDiv = event.target.parentNode.parentNode.parentNode;\n  contentsDiv.clicked_id = event.target.id;\n};\n// const saveMemo = () => {\n//   const book_data = JSON.parse(localStorage.getItem('book'));\n//   const movie_data = JSON.parse(localStorage.getItem('movie'));\n//   const targetImg = document.querySelector('.clicked-img');\n//   const contents = document.querySelector('.contents-div');\n//   const memoSpace = document.querySelector('.memo-space').children[0];\n//   if (!targetImg || !contents) return;\n//   if (contents.children[0].classList.contains('book-div')) {\n//     const index = Object.keys(book_data).find(\n//       (key) => book_data[key].id === parseInt(targetImg.id)\n//     );\n//     console.log(memoSpace.value);\n//     book_data[index].memo = memoSpace.value;\n//     bookList = book_data;\n//     saveImg('book', bookList);\n//   } else {\n//     const index = Object.keys(movie_data).find(\n//       (key) => movie_data[key].id === parseInt(targetImg.id)\n//     );\n//     movie_data[index].memo = memoSpace.value;\n//     movieList = movie_data;\n//     saveImg('movie', movieList);\n//   }\n// };\n\nconst addMovie = (img_url, movieList) => {\n  let id_num;\n  if (movieList.length === 0) id_num = 0;\n  else id_num = movieList[movieList.length - 1].id + 1;\n  const contents = document.querySelector('.contents-div');\n  if (!contents) return;\n  const movieDiv = contents.children[0];\n  const newDiv = document.createElement('div');\n  const newImg = document.createElement('img');\n  newDiv.appendChild(newImg);\n  newDiv.classList.add('img-div');\n  newImg.id = id_num;\n  newImg.src = img_url;\n  newImg.classList.add('movie-img');\n  newImg.addEventListener('click', clickHandler);\n  const obj = {\n    id: id_num,\n    data: img_url,\n    memo: '',\n  };\n  movieList.push(obj);\n  saveImg('movie', movieList);\n  movieDiv.appendChild(newDiv);\n};\n\nconst addBook = (img_url, bookList, img_memo) => {\n  let id_num;\n  if (bookList.length === 0) id_num = 0;\n  else id_num = bookList[bookList.length - 1].id + 1;\n  const contents = document.querySelector('.contents-div');\n  if (!contents) return;\n  const bookDiv = contents.children[0];\n  const newDiv = document.createElement('div');\n  const newImg = document.createElement('img');\n  newDiv.appendChild(newImg);\n  newDiv.classList.add('img-div');\n  newImg.id = id_num;\n  newImg.src = img_url;\n  newImg.classList.add('book-img');\n  newImg.addEventListener('click', clickHandler);\n  if (typeof img_memo === 'undefined') img_memo = '';\n  const obj = {\n    id: id_num,\n    data: img_url,\n    memo: img_memo,\n  };\n  bookList.push(obj);\n  saveImg('book', bookList);\n  bookDiv.appendChild(newDiv);\n};\nconst saveImg = (arg, list) => {\n  const category = arg === 'book' ? 'book' : 'movie';\n  localStorage.setItem(category, JSON.stringify(list));\n};\n\n// const loadImg = () => {\n//   const contents = document.querySelector('.contents-div');\n//   if (!contents) return;\n//   const content = contents.children[0]; // book-div or movie-div\n//   let newId = 0;\n//   if (content.classList.contains('book-div')) {\n//     const book_data = JSON.parse(localStorage.getItem('book'));\n//     let newBookList = [];\n//     if (book_data !== null) {\n//       book_data.forEach((a) => {\n//         addBook(a.data, a.memo, newBookList, newId);\n//       });\n//     }\n//   }\n//   if (content.classList.contains('movie-div')) {\n//     const movie_data = JSON.parse(localStorage.getItem('movie'));\n//     let newMovieList = [];\n//     if (movie_data !== null) {\n//       movie_data.forEach((a) => {\n//         addMovie(a.data, a.memo, newMovieList, newId);\n//       });\n//     }\n//   }\n//   console.log('newlist: ', newBookList); // 왜 빈 리스트가 아니냐?\n//   console.log('newlist: ', newMovieList); // 왜 빈 리스트가 아니냐?\n// if (!memoBtn) return;\n// memoBtn.addEventListener('click', openMemo);\n// deleteBtn.addEventListener('click', deleteImg);\n// };\n\nwindow.onclick = (event) => {\n  const searchBtn = document.querySelector('.search-icon');\n  const dropDown = document.querySelector('.dropDown-menu');\n  const targetImg = document.querySelector('.clicked-img');\n  const editMenu = document.querySelector('.edit-menu');\n  if (!searchBtn && !dropDown) return;\n  if (event.target !== searchBtn) dropDown.classList.remove('show');\n  if (!editMenu) return;\n  const editMenuArr = [editMenu, editMenu.children[0], editMenu.children[1]];\n  const isClickEditMenu = editMenuArr.some((ele) => ele === event.target);\n  if (!targetImg || isClickEditMenu) return; // target이 editMenu일 때는 함수 종료\n  if (event.target !== targetImg) {\n    editMenu.classList.add('invisible');\n    targetImg.classList.remove('clicked-img');\n  }\n};\n\nconst useBrowser = () => {\n  const element = useRef();\n  const clickbrowser = () => element.current.click();\n  const readFile = () => {\n    const contents = document.querySelector('.contents-div');\n    if (!contents) return;\n    const content = contents.children[0]; // book-div or movie-div\n    const file = element.current.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/') && file !== null)\n      window.alert('이미지 파일만 선택해주십시오.');\n    else {\n      const reader = new FileReader();\n      reader.onload = function () {\n        if (content.classList.contains('book-div')) {\n          let bookList = JSON.parse(localStorage.getItem('book'));\n          if (!bookList) bookList = [];\n          addBook(reader.result, bookList, '');\n        }\n        if (content.classList.contains('movie-div')) {\n          let movieList = JSON.parse(localStorage.getItem('movie'));\n          if (!movieList) movieList = [];\n          addMovie(reader.result, movieList, '');\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  useEffect(() => {\n    const { current } = element;\n    current.addEventListener('change', readFile);\n    return () => current.removeEventListener('change', readFile);\n  }, []);\n  return { element, clickbrowser };\n};\n\nconst loadFunction = {\n  // loadImg,\n  // saveMemo,\n  clickHandler,\n  addBook,\n  addMovie,\n};\n\nexport const LoadFunctionContext = createContext(loadFunction);\n\nconst Search = () => {\n  const { element, clickbrowser } = useBrowser();\n  const dropDown_menu = useRef();\n  const checking = showOrHide(dropDown_menu);\n\n  return (\n    <div className=\"dropDown\">\n      {/* <LoadFunctionContext.Provider\n        value={loadFunction}\n      ></LoadFunctionContext.Provider> */}\n\n      <input type=\"file\" id=\"file-browser\" ref={element} />\n      <button className=\"nav-icon search-icon\" onClick={checking}>\n        🔍\n      </button>\n      <div className=\"dropDown-menu\" ref={dropDown_menu}>\n        <div className=\"dropDown-book\">책 검색</div>\n        <div className=\"dropDown-movie\">영화 검색</div>\n        <div className=\"dropDown-browser\" onClick={clickbrowser}>\n          내 컴퓨터\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}