{"ast":null,"code":"var _jsxFileName = \"/Users/hoon/Documents/memory_space/src/home/header/Search.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Functions } from '../body/Functions';\nimport './Search.css'; // const showOrHide = (menu) => {\n//   const checking = () => menu.current.classList.toggle('show');\n//   return checking;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nwindow.onclick = event => {\n  const searchBtn = document.querySelector('.search-icon');\n  const dropDown = document.querySelector('.dropDown-menu');\n  const targetImg = document.querySelector('.clicked-img');\n  const editMenu = document.querySelector('.edit-menu');\n  if (!searchBtn && !dropDown) return;\n  if (event.target !== searchBtn) dropDown.classList.remove('show');\n  if (!editMenu) return;\n  const editMenuArr = [editMenu, editMenu.children[0], editMenu.children[1]];\n  const isClickEditMenu = editMenuArr.some(ele => ele === event.target);\n  if (!targetImg || isClickEditMenu) return; // target이 editMenu일 때는 함수 종료\n\n  if (event.target !== targetImg) {\n    editMenu.classList.add('invisible');\n    targetImg.classList.remove('clicked-img');\n  }\n};\n\nconst useBrowser = () => {\n  _s();\n\n  const element = useRef();\n\n  const clickbrowser = () => element.current.click();\n\n  const readFile = () => {\n    const contents = document.querySelector('.contents-div');\n    if (!contents) return;\n    const content = contents.children[0]; // book-div or movie-div\n\n    const file = element.current.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/') && file !== null) window.alert('이미지 파일만 선택해주십시오.');else {\n      const reader = new FileReader();\n\n      reader.onload = function () {\n        if (content.classList.contains('book-div')) {\n          let bookList = JSON.parse(localStorage.getItem('book'));\n          if (!bookList) bookList = [];\n          Functions().addBook(reader.result, bookList, '');\n        }\n\n        if (content.classList.contains('movie-div')) {\n          let movieList = JSON.parse(localStorage.getItem('movie'));\n          if (!movieList) movieList = [];\n          console.log('read', movieList);\n          Functions().addMovie(reader.result, movieList, '');\n        }\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  useEffect(() => {\n    const {\n      current\n    } = element;\n    current.addEventListener('change', readFile);\n    return () => current.removeEventListener('change', readFile);\n  }, []);\n  return {\n    element,\n    clickbrowser\n  };\n};\n\n_s(useBrowser, \"SpBhasJPVJrZGxeF9Xbi1q4ov4I=\");\n\nconst Search = () => {\n  _s2();\n\n  const {\n    element,\n    clickbrowser\n  } = useBrowser(); // const dropDown_menu = useRef();\n  // const checking = showOrHide(dropDown_menu);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropDown\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-browser\",\n      ref: element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-icon search-icon\",\n      onClick: clickbrowser,\n      children: \"\\uD83D\\uDCC2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Search, \"9ttyOodxrPnNEufK10zpbdZKHy4=\", false, function () {\n  return [useBrowser];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/hoon/Documents/memory_space/src/home/header/Search.js"],"names":["React","useRef","useEffect","Functions","window","onclick","event","searchBtn","document","querySelector","dropDown","targetImg","editMenu","target","classList","remove","editMenuArr","children","isClickEditMenu","some","ele","add","useBrowser","element","clickbrowser","current","click","readFile","contents","content","file","files","type","startsWith","alert","reader","FileReader","onload","contains","bookList","JSON","parse","localStorage","getItem","addBook","result","movieList","console","log","addMovie","readAsDataURL","addEventListener","removeEventListener","Search"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Functions } from '../body/Functions';\nimport './Search.css';\n\n// const showOrHide = (menu) => {\n//   const checking = () => menu.current.classList.toggle('show');\n//   return checking;\n// };\n\nwindow.onclick = (event) => {\n  const searchBtn = document.querySelector('.search-icon');\n  const dropDown = document.querySelector('.dropDown-menu');\n  const targetImg = document.querySelector('.clicked-img');\n  const editMenu = document.querySelector('.edit-menu');\n  if (!searchBtn && !dropDown) return;\n  if (event.target !== searchBtn) dropDown.classList.remove('show');\n  if (!editMenu) return;\n  const editMenuArr = [editMenu, editMenu.children[0], editMenu.children[1]];\n  const isClickEditMenu = editMenuArr.some((ele) => ele === event.target);\n  if (!targetImg || isClickEditMenu) return; // target이 editMenu일 때는 함수 종료\n  if (event.target !== targetImg) {\n    editMenu.classList.add('invisible');\n    targetImg.classList.remove('clicked-img');\n  }\n};\n\nconst useBrowser = () => {\n  const element = useRef();\n  const clickbrowser = () => element.current.click();\n  const readFile = () => {\n    const contents = document.querySelector('.contents-div');\n    if (!contents) return;\n    const content = contents.children[0]; // book-div or movie-div\n    const file = element.current.files[0];\n    if (!file) return;\n    if (!file.type.startsWith('image/') && file !== null)\n      window.alert('이미지 파일만 선택해주십시오.');\n    else {\n      const reader = new FileReader();\n      reader.onload = function () {\n        if (content.classList.contains('book-div')) {\n          let bookList = JSON.parse(localStorage.getItem('book'));\n          if (!bookList) bookList = [];\n          Functions().addBook(reader.result, bookList, '');\n        }\n        if (content.classList.contains('movie-div')) {\n          let movieList = JSON.parse(localStorage.getItem('movie'));\n          if (!movieList) movieList = [];\n          console.log('read', movieList);\n          Functions().addMovie(reader.result, movieList, '');\n        }\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  useEffect(() => {\n    const { current } = element;\n    current.addEventListener('change', readFile);\n    return () => current.removeEventListener('change', readFile);\n  }, []);\n  return { element, clickbrowser };\n};\n\nconst Search = () => {\n  const { element, clickbrowser } = useBrowser();\n  // const dropDown_menu = useRef();\n  // const checking = showOrHide(dropDown_menu);\n  return (\n    <div className=\"dropDown\">\n      <input type=\"file\" id=\"file-browser\" ref={element} />\n      <button className=\"nav-icon search-icon\" onClick={clickbrowser}>\n        📂\n      </button>\n      {/* <div className=\"dropDown-menu\" ref={dropDown_menu}>\n        <div className=\"dropDown-book\">책 검색</div>\n        <div className=\"dropDown-movie\">영화 검색</div>\n        <div className=\"dropDown-browser\">\n          내 컴퓨터\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}